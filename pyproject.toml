[tool.poetry]
name = "moe_musicbrainz"
version = "1.1.0"
description = "Template plugin repository."
authors = ["Jacob Pavlock <jtpavlock@gmail.com>"]
documentation = "https://moe-musicbrainz.readthedocs.io/en/latest/"
license = "MIT"
readme = "README.rst"

[tool.poetry.dependencies]
python = ">=3.9,<3.14"
moe = "^2.1.3"

[tool.poetry.group.test.dependencies]
debugpy = "^1.4.1"
pytest = "^8.0.0"
pytest-cov = "^6.0.0"
tox = "^4.0.0"

[tool.poetry.group.lint.dependencies]
ruff = "==0.12.1"
commitizen = "^3.0.0"
"github3.py" = "^4.0.0"
pre-commit = "^4.0.0"
pyright = "==1.1.402"

[tool.poetry.group.docs.dependencies]
furo = "*"
pypandoc = "^1.9"
Sphinx = "^7.0.0"

[tool.poetry.plugins."moe.plugins"]
"musicbrainz" = "moe_musicbrainz"

[tool.commitizen]
name = "cz_customize"
version = "1.1.0"
version_files = [
    "pyproject.toml:^version",
]
tag_format = "v$version"

[tool.commitizen.customize]
bump_pattern = '^(build|deprecate|feat|fix|perf)'
bump_map = { feat = "MINOR", build = "PATCH", deprecate = "PATCH", fix = "PATCH", perf = "PATCH" }
schema_pattern = '(build|ci|deprecate|docs|feat|fix|perf|refactor|release|style|test)(\(\w+\))?!?:\s\S.*'

[tool.pytest.ini_options]
log_cli_level = 10
addopts = "--color=yes"
markers = [
    "network: tests that make network calls",
    "darwin: tests that should only run on apple",
    "linux: tests that should only run on linux",
    "win32: tests that should only run on windows"
]

[tool.pyright]
exclude = [
    "alembic", "tests"
]
pythonPlatform = "All"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM", # the formatter handles trailing commas
    "G004", # use f strings in logging for a consistent string format
    "PYI056", # use extend on __all__
    "RET501", # don't care about return None semantics
    "RET502", # don't care about return None semantics
    "RET503", # don't care about return None semantics
]

[tool.ruff.lint.per-file-ignores]
"docs/conf.py" = [
    "ERA001", # conf.py includes commented config examples
    "INP001", # docs directory isn't a python package
]
"tests/*" = [
    "ANN", # tests don't need type annotations
    "ARG", # arguments in pytest are fixtures
    "C90", # tests are as complex as they need to be
    "INP001", # tests don't need __init__
    "RET", # tests don't need returns
    "S", # asserts used in tests
]
"tests/resources/*" = [
    "RUF001", # keep musicbrainz string formatting
    "E501", # keep original dict formatting
]

[tool.ruff.lint.pydocstyle]
convention = "google"


[build-system]
requires = ["poetry-core>=1.0"]
build-backend = "poetry.core.masonry.api"
